{"type":"doc","content":[{"type":"heading","attrs":{"level":1,"class":"pm-align--left"},"content":[{"type":"text","text":"OOP - Object Oriented Programming"}]},{"type":"paragraph","attrs":{"class":"pm-align--left"}},{"type":"heading","attrs":{"level":2,"class":"pm-align--left"},"content":[{"type":"text","text":"Class"}]},{"type":"bullet_list","content":[{"type":"list_item","content":[{"type":"paragraph","attrs":{"class":"pm-align--left"},"content":[{"type":"text","text":"A class is a blue print of an Object"}]}]},{"type":"list_item","content":[{"type":"paragraph","attrs":{"class":"pm-align--left"},"content":[{"type":"text","text":"It has actions/abilities - so called member functions or methods"}]}]},{"type":"list_item","content":[{"type":"paragraph","attrs":{"class":"pm-align--left"},"content":[{"type":"text","text":"It has properties - so called member variables"}]}]},{"type":"list_item","content":[{"type":"paragraph","attrs":{"class":"pm-align--left"},"content":[{"type":"text","text":"Inheritance possible"}]}]},{"type":"list_item","content":[{"type":"paragraph","attrs":{"class":"pm-align--left"},"content":[{"type":"text","text":"Can be used like a Datatype (string is a class)"}]}]}]},{"type":"heading","attrs":{"level":2,"class":"pm-align--left"},"content":[{"type":"text","text":"Object(Car)"}]},{"type":"bullet_list","content":[{"type":"list_item","content":[{"type":"paragraph","attrs":{"class":"pm-align--left"},"content":[{"type":"text","text":"Properties: HP, Amount of Wheels, Lumen, Doors"}]}]},{"type":"list_item","content":[{"type":"paragraph","attrs":{"class":"pm-align--left"},"content":[{"type":"text","text":"Abilities: Drive, Break, Open Windows, Make light"}]}]},{"type":"list_item","content":[{"type":"paragraph","attrs":{"class":"pm-align--left"},"content":[{"type":"text","text":"Inheritance: A5 is Audi, Audi is a Car"}]}]}]},{"type":"paragraph","attrs":{"class":"pm-align--left"}},{"type":"heading","attrs":{"level":4,"class":"pm-align--left"},"content":[{"type":"text","text":"Example of a Class"}]},{"type":"code_block","attrs":{"params":"cs","collapsed":false},"content":[{"type":"text","text":"    // this class is a blueprint for a datatype\n    class Human\n    {\n        //Members\n        public string firstName;\n        public string lastName;\n        //member method\n        public void IntroduceMyself()\n        {\n            Console.WriteLine(\"Hi I am {0} {1}\",firstName, lastName);\n        }\n    }\n"}]},{"type":"heading","attrs":{"level":4,"class":"pm-align--left"},"content":[{"type":"text","text":"Exmaple of an Object"}]},{"type":"code_block","attrs":{"params":"cs","collapsed":false},"content":[{"type":"text","text":"        static void Main(string[] args)\n        {\n            //Creating an object of Human class\n            Human denis = new Human();\n            denis.firstName = \"Denis\";\n            denis.lastName = \"Penis\";\n            denis.IntroduceMyself();\n            Human mercito = new Human();\n            mercito.firstName = \"Mercito\";\n            mercito.lastName = \"Ercito\";\n            mercito.IntroduceMyself();\n            Console.ReadLine();\n        }\n"}]},{"type":"paragraph","attrs":{"class":"pm-align--left"}},{"type":"heading","attrs":{"level":2,"class":"pm-align--left"},"content":[{"type":"text","text":"Constructors"}]},{"type":"paragraph","attrs":{"class":"pm-align--left"},"content":[{"type":"text","text":"construcors give us possibility to define class parameters."}]},{"type":"heading","attrs":{"level":4,"class":"pm-align--left"},"content":[{"type":"text","text":"Example of a constructor "}]},{"type":"code_block","attrs":{"params":"cs","collapsed":false},"content":[{"type":"text","text":"    class Human\n    {\n        //Members\n        private string firstName;\n        private string lastName;\n        private string eyeColor;\n        private int age;\n        \n        //constructor\n        public Human(string firstName, string lastName, string eyeColor, int age)\n        {\n            this.firstName = firstName;\n            this.lastName = lastName;\n            this.eyeColor = eyeColor;\n            this.age = age;\n        }     \n     }"}]},{"type":"paragraph","attrs":{"class":"pm-align--left"},"content":[{"type":"text","text":"we define constructor using class name (Human) and in brackets we give parameters.                                   In the inside of Constructor we can assing those paramters to variable members.                                 With "},{"type":"text","marks":[{"type":"strong"}],"text":"this "},{"type":"text","text":"say that variable is a member"}]},{"type":"paragraph","attrs":{"class":"pm-align--left"}},{"type":"heading","attrs":{"level":4,"class":"pm-align--left"},"content":[{"type":"text","text":"Example of calling a Class with constructor"}]},{"type":"code_block","attrs":{"params":"cs","collapsed":false},"content":[{"type":"text","text":"        static void Main(string[] args)\n        {\n            //Creating an object of Human class\n            Human denis = new Human(\"Denis\", \"Penis\", \"blue\", 23);\n            denis.IntroduceMyself();\n            Human mercito = new Human(\"Mercito\", \"Ercito\", \"red\", 12);\n            mercito.IntroduceMyself();\n            Console.ReadLine();\n        }"}]},{"type":"paragraph","attrs":{"class":"pm-align--left"}},{"type":"heading","attrs":{"level":3,"class":"pm-align--left"},"content":[{"type":"text","text":"Multiple Constructors"}]},{"type":"code_block","attrs":{"params":"cs","collapsed":false},"content":[{"type":"text","text":"        //default constructor\n        public Human()\n        {\n            Console.WriteLine(\"Object created\");\n        }\n        // paramterized constructor\n        public Human(string firstName, string lastName, string eyeColor)\n        {\n            this.firstName = firstName;\n            this.lastName = lastName;\n            this.eyeColor = eyeColor;\n        }\n        // paramterized constructor\n        public Human(string firstName, string lastName, string eyeColor, int age)\n        {\n            this.firstName = firstName;\n            this.lastName = lastName;\n            this.eyeColor = eyeColor;\n            this.age = age;\n        }"}]},{"type":"paragraph","attrs":{"class":"pm-align--left"}},{"type":"heading","attrs":{"level":2,"class":"pm-align--left"},"content":[{"type":"text","text":"Properties"}]},{"type":"paragraph","attrs":{"class":"pm-align--left"},"content":[{"type":"text","text":"properties are used to set and get the values of private variables in the class. It makes class safer and gives us possibility to control user inputs, before they are assinged to class member variable."}]},{"type":"code_block","attrs":{"params":"cs","collapsed":false},"content":[{"type":"text","text":"        // member variables\n        private int length;\n        private int height;\n        //public int width;\n        private int volume;\n        //--Properties\n        public int Height\n        {\n            get\n            {\n                return this.height;\n            }\n            set\n            {\n                this.height = value;\n            }\n        }\n        public int Width { get; set; }\n        public int Volume\n        {\n            get\n            {\n                return this.length*this.height*this.Width;\n            }\n        }\n        \n        public void SetLenght(int length)\n        {\n            if (length < 0)\n                throw new Exception(\"Length can be smaller than 0\");\n            this.length = length;\n        }\n        public int GetLenght()\n        {\n            return this.length;\n        }\n        //++Properties\n"}]},{"type":"heading","attrs":{"level":3,"class":"pm-align--left"},"content":[{"type":"text","text":"Members"}]},{"type":"paragraph","attrs":{"class":"pm-align--left"}},{"type":"heading","attrs":{"level":4,"class":"pm-align--left"},"content":[{"type":"text","text":"examples of class members"}]},{"type":"code_block","attrs":{"params":"cs","collapsed":false},"content":[{"type":"text","text":"class Members\n    {\n        //member - private field\n        private string memberName;\n        private string jobTitle;\n        private int salary;\n        //member - public field\n        public int age;\n        //member - property - exposes jobTitle safely - properties start with a capital letter\n        public string JobTitle {\n            get\n            {\n                return jobTitle;\n            }\n            set\n            {\n                jobTitle = value;\n            }\n        }\n        // public member Method - which can be called from another classes\n        public void Introducing(bool isFriend)\n        {\n            if (isFriend)\n            {\n                SharingPrivateInfo();\n            }\n            else\n                Console.WriteLine(\"Hi, my name is {0} and my job title is {1}. I am {2} years old\",\n                    memberName, jobTitle, age);\n        }\n        // private member Method - which can be called within class\n        private void SharingPrivateInfo()\n        {\n            Console.WriteLine(\"My salary is {0}\", salary);\n        }\n        // member constructor\n        public Members()\n        {\n            age = 30;\n            memberName = \"Lucy\";\n            salary = 30000;\n            jobTitle = \"Developer\";\n            Console.WriteLine(\"Object created\");\n        }\n        //member - finalizer - destructor\n        ~Members()\n        {\n            //its there for cleanup statements\n            Console.WriteLine(\"Deconstruction of Members object\");\n            Debug.Write(\"Deconstruction of Members object\");\n        }\n    }\n"}]}]}